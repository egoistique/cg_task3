/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CubePanel.java
 *
 * Created on Nov 28, 2011, 12:08:49 PM
 */
package shapes.panels;

import Jama.Matrix;
import canva.Canva;
import shapes.controls.PerspectiveControl;
import shapes.shapes.Cube;
import shapes.utils.Coordinate;
import shapes.utils.Coordinates;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Sergey
 */
public class CubePanel extends AbstractGraphicsObjectPanel {

	private Cube shape;
	private Canva canva;
	
	private int x;
	private int y;
	private int z;
	
	/** Creates new form CubePanel */
	public CubePanel(final Cube shape, final Canva canva) {
		initComponents();
		
		this.shape = shape;
		this.canva = canva;
		
		ChangeListener changeListener = new ChangeListener() {
			@Override
			public void stateChanged(ChangeEvent e) {
				canva.repaintCanva();
			}
		};
		
		ChangeListener perspectiveChangeListener = new ChangeListener() {
			@Override
			public void stateChanged(ChangeEvent e) {
				shape.applyPerspective(0, 0, (Integer)dSpinner.getValue());
				canva.repaintCanva();
			}
		};
		
		ChangeListener perspectiveViewChangeListener = new ChangeListener() {
			@Override
			public void stateChanged(ChangeEvent e) {
				Coordinate plp = shape.getPerspectiveLoockPoint();
				shape.setPerspectiveLoockPoint(new Coordinate(null, plp.get(0), plp.get(1), (Integer)zViewSpinner.getValue()));
				canva.repaintCanva();
				System.out.println("!!!");
			}
		};		
		
		antialiasingCheckBox.addChangeListener(changeListener);
		invisCheckBox.addChangeListener(changeListener);
		perspectiveCheckBox.addChangeListener(changeListener);
		
		AbstractSpinnerModel spModelCell = new SpinnerNumberModel(
						1, 1, 100, 1);
		dSpinner.setModel(spModelCell);
		dSpinner.addChangeListener(perspectiveChangeListener);
		
		spModelCell = new SpinnerNumberModel(
						0, 0, 100, 1);
		zViewSpinner.setModel(spModelCell);
		zViewSpinner.addChangeListener(perspectiveViewChangeListener);		
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        antialiasingCheckBox = new javax.swing.JCheckBox();
        invisCheckBox = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        xMoveLeft = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        xMoveRight = new javax.swing.JButton();
        yMoveLeft = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        yMoveRight = new javax.swing.JButton();
        zMoveLeft = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        zMoveRight = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        yRotLeft = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        yRotRight = new javax.swing.JButton();
        xRotLeft = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        xRotRight = new javax.swing.JButton();
        zRotLeft = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        zRotRight = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        allScaleUp = new javax.swing.JButton();
        allScaleDown = new javax.swing.JButton();
        xScaleUp = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        xScaleDown = new javax.swing.JButton();
        yScaleUp = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        yScaleDown = new javax.swing.JButton();
        zScaleUp = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        zScaleDown = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        xReflect = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        yReflect = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        zReflect = new javax.swing.JButton();
        allReflect = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        dSpinner = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        changePerspectiveViewButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        zViewSpinner = new javax.swing.JSpinner();
        perspectiveCheckBox = new javax.swing.JCheckBox();

        setMaximumSize(new java.awt.Dimension(250, 32767));
        setMinimumSize(new java.awt.Dimension(250, 10));
        setPreferredSize(new java.awt.Dimension(250, 0));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Настройки"));

        antialiasingCheckBox.setText("Сглаживание");

        invisCheckBox.setText("Убрать невидимые грани");
        invisCheckBox.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(antialiasingCheckBox)
                    .addComponent(invisCheckBox))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(antialiasingCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(invisCheckBox))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Перемещение"));

        xMoveLeft.setText("<");
        xMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMoveLeftActionPerformed(evt);
            }
        });

        jLabel1.setText("X");

        xMoveRight.setText(">");
        xMoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xMoveRightActionPerformed(evt);
            }
        });

        yMoveLeft.setText("<");
        yMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yMoveLeftActionPerformed(evt);
            }
        });

        jLabel2.setText("Y");

        yMoveRight.setText(">");
        yMoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yMoveRightActionPerformed(evt);
            }
        });

        zMoveLeft.setText("<");
        zMoveLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zMoveLeftActionPerformed(evt);
            }
        });

        jLabel3.setText("Z");

        zMoveRight.setText(">");
        zMoveRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zMoveRightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(xMoveLeft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xMoveRight))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(yMoveLeft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yMoveRight))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(zMoveLeft)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(zMoveRight))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xMoveLeft)
                    .addComponent(jLabel1)
                    .addComponent(xMoveRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yMoveLeft)
                    .addComponent(jLabel2)
                    .addComponent(yMoveRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zMoveLeft)
                    .addComponent(jLabel3)
                    .addComponent(zMoveRight)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Поворот"));

        yRotLeft.setText("<");
        yRotLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yRotLeftActionPerformed(evt);
            }
        });

        jLabel4.setText("Y");

        yRotRight.setText(">");
        yRotRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yRotRightActionPerformed(evt);
            }
        });

        xRotLeft.setText("<");
        xRotLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xRotLeftActionPerformed(evt);
            }
        });

        jLabel5.setText("X");

        xRotRight.setText(">");
        xRotRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xRotRightActionPerformed(evt);
            }
        });

        zRotLeft.setText("<");
        zRotLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zRotLeftActionPerformed(evt);
            }
        });

        jLabel6.setText("Z");

        zRotRight.setText(">");
        zRotRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zRotRightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(zRotLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zRotRight))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(yRotLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yRotRight))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(xRotLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xRotRight)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xRotLeft)
                    .addComponent(jLabel5)
                    .addComponent(xRotRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yRotLeft)
                    .addComponent(jLabel4)
                    .addComponent(yRotRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zRotLeft)
                    .addComponent(jLabel6)
                    .addComponent(zRotRight)))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Масштаб"));

        allScaleUp.setText("<");
        allScaleUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allScaleUpActionPerformed(evt);
            }
        });

        allScaleDown.setText(">");
        allScaleDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allScaleDownActionPerformed(evt);
            }
        });

        xScaleUp.setText("<");
        xScaleUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xScaleUpActionPerformed(evt);
            }
        });

        jLabel7.setText("X");

        xScaleDown.setText(">");
        xScaleDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xScaleDownActionPerformed(evt);
            }
        });

        yScaleUp.setText("<");
        yScaleUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yScaleUpActionPerformed(evt);
            }
        });

        jLabel8.setText("Y");

        yScaleDown.setText(">");
        yScaleDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yScaleDownActionPerformed(evt);
            }
        });

        zScaleUp.setText("<");
        zScaleUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zScaleUpActionPerformed(evt);
            }
        });

        jLabel9.setText("Z");

        zScaleDown.setText(">");
        zScaleDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zScaleDownActionPerformed(evt);
            }
        });

        jLabel10.setText("A");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(allScaleUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(allScaleDown))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(xScaleUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(xScaleDown))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(yScaleUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yScaleDown))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(zScaleUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(6, 6, 6)
                .addComponent(zScaleDown))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xScaleUp)
                    .addComponent(jLabel7)
                    .addComponent(xScaleDown))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yScaleUp)
                    .addComponent(jLabel8)
                    .addComponent(yScaleDown))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zScaleUp)
                    .addComponent(jLabel9)
                    .addComponent(zScaleDown))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allScaleUp)
                    .addComponent(jLabel10)
                    .addComponent(allScaleDown)))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Отражение")));

        jLabel11.setText("X");

        xReflect.setText(">>>");
        xReflect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xReflectActionPerformed(evt);
            }
        });

        jLabel12.setText("Y");

        yReflect.setText(">>>");
        yReflect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yReflectActionPerformed(evt);
            }
        });

        jLabel13.setText("Z");

        zReflect.setText(">>>");
        zReflect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zReflectActionPerformed(evt);
            }
        });

        allReflect.setText(">>>");
        allReflect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allReflectActionPerformed(evt);
            }
        });

        jLabel14.setText("A");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zReflect))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yReflect))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(allReflect))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xReflect)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xReflect)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yReflect)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zReflect)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allReflect)
                    .addComponent(jLabel14)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Перспективные преобразования")));

        jLabel15.setText("dz");

        changePerspectiveViewButton.setText("Переместить взгляд");
        changePerspectiveViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePerspectiveViewButtonActionPerformed(evt);
            }
        });

        jLabel16.setText("z Взгляд");

        perspectiveCheckBox.setText("Перспектива");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(zViewSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))
                    .addComponent(changePerspectiveViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .addComponent(perspectiveCheckBox))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(zViewSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(perspectiveCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changePerspectiveViewButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Отображение относительно центра масс фигуры
	 */
	private void allReflectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allReflectActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{-1, 0, 0, 0}, 					{0, -1, 0, 0}, 					{0, 0, -1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_allReflectActionPerformed

	/**
	 * Отображение относительно оси OZ
	 */
	private void zReflectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zReflectActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, -1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_zReflectActionPerformed

	/**
	 * Отображение относительно оси OY
	 */	
	private void yReflectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yReflectActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, -1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_yReflectActionPerformed

	/**
	 * Отображение относительно оси OX
	 */	
	private void xReflectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xReflectActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{-1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_xReflectActionPerformed

	/**
	 * Уменьшение масштаба вдоль оси OZ
	 */
	private void zScaleDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zScaleDownActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 0.8, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_zScaleDownActionPerformed

	/**
	 * Увеличение масштаба вдоль оси OZ
	 */	
	private void zScaleUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zScaleUpActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1.2, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_zScaleUpActionPerformed

	/**
	 * Уменьшение масштаба вдоль оси OY
	 */
	private void yScaleDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yScaleDownActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 0.8, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_yScaleDownActionPerformed

	/**
	 * Увеличение масштаба вдоль оси OY
	 */	
	private void yScaleUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yScaleUpActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1.2, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_yScaleUpActionPerformed

	/**
	 * Уменьшение масштаба вдоль оси OX
	 */		
	private void xScaleDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xScaleDownActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{0.8, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_xScaleDownActionPerformed

	/**
	 * Увеличение масштаба вдоль оси OX
	 */		
	private void xScaleUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xScaleUpActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1.2, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_xScaleUpActionPerformed

	/**
	 * Уменьшение масштаба всей фигуры
	 */	
	private void allScaleDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allScaleDownActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{0.8, 0, 0, 0}, 					{0, 0.8, 0, 0}, 					{0, 0, 0.8, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_allScaleDownActionPerformed

	/**
	 * Увеличение масштаба всей фигуры
	 */
	private void allScaleUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allScaleUpActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1.2, 0, 0, 0}, 					{0, 1.2, 0, 0}, 					{0, 0, 1.2, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_allScaleUpActionPerformed

	/**
	 * Врящение вокруг оси OZ по чесовой стрелке
	 */
	private void zRotRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zRotRightActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{Math.cos(Math.PI / 20), -Math.sin(Math.PI / 20), 0, 0}, 					{Math.sin(Math.PI / 20), Math.cos(Math.PI / 20), 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		transfirmMatrix = transfirmMatrix.inverse(); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_zRotRightActionPerformed

	/**
	 * Врящение вокруг оси OZ против чесовой стрелке
	 */
	private void zRotLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zRotLeftActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{Math.cos(Math.PI / 20), -Math.sin(Math.PI / 20), 0, 0}, 					{Math.sin(Math.PI / 20), Math.cos(Math.PI / 20), 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_zRotLeftActionPerformed

	/**
	 * Врящение вокруг оси OY по чесовой стрелке
	 */	
	private void yRotRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yRotRightActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, Math.cos(Math.PI / 20), -Math.sin(Math.PI / 20), 0}, 					{0, Math.sin(Math.PI / 20), Math.cos(Math.PI / 20), 0}, 					{0, 0, 0, 1}}, 4, 4); 		transfirmMatrix = transfirmMatrix.inverse(); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_yRotRightActionPerformed

	/**
	 * Врящение вокруг оси OY против чесовой стрелке
	 */		
	private void yRotLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yRotLeftActionPerformed

		moveCubeToCenter(); 		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, Math.cos(Math.PI / 20), -Math.sin(Math.PI / 20), 0}, 					{0, Math.sin(Math.PI / 20), Math.cos(Math.PI / 20), 0}, 					{0, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		restoreCubePosition(); 		canva.repaintCanva(); 	}//GEN-LAST:event_yRotLeftActionPerformed

	/**
	 * Врящение вокруг оси OZ по чесовой стрелке
	 */		
	private void zMoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zMoveRightActionPerformed

		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, -1, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		canva.repaintCanva(); 	}//GEN-LAST:event_zMoveRightActionPerformed

	/**
	 * Врящение вокруг оси OZ против чесовой стрелке
	 */			
	private void zMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zMoveLeftActionPerformed

		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 0, 1, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		canva.repaintCanva(); 	}//GEN-LAST:event_zMoveLeftActionPerformed

	/**
	 * Перемещение вдоль оси OY в положительном направлении координат
	 */
	private void yMoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yMoveRightActionPerformed

		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, -1, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		canva.repaintCanva(); 	}//GEN-LAST:event_yMoveRightActionPerformed

	/**
	 * Перемещение вдоль оси OY в отрицательном направлении координат
	 */	
	private void yMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yMoveLeftActionPerformed

		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{0, 1, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		canva.repaintCanva(); 	}//GEN-LAST:event_yMoveLeftActionPerformed

	/**
	 * Перемещение вдоль оси OX в положительном направлении координат
	 */	
	private void xMoveRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMoveRightActionPerformed

		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{1, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		canva.repaintCanva(); 	}//GEN-LAST:event_xMoveRightActionPerformed

	/**
	 * Перемещение вдоль оси OX в отрицательном направлении координат
	 */		
	private void xMoveLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xMoveLeftActionPerformed

		Matrix transfirmMatrix = new Matrix(new double[][]{ 					{1, 0, 0, 0}, 					{0, 1, 0, 0}, 					{0, 0, 1, 0}, 					{-1, 0, 0, 1}}, 4, 4); 		shape.applyAffine(transfirmMatrix); 		canva.repaintCanva(); 	}//GEN-LAST:event_xMoveLeftActionPerformed

	/**
	 * Врящение вокруг оси OX по чесовой стрелке
	 */	
	private void xRotLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xRotLeftActionPerformed
		moveCubeToCenter(); 		
		Matrix transfirmMatrix = new Matrix(new double[][]{ 					
			{Math.cos(Math.PI / 20), 0, -Math.sin(Math.PI / 20), 0}, 					
			{0, 1, 0, 0},
			{Math.sin(Math.PI / 20), 0, Math.cos(Math.PI / 20), 0},
			{0, 0, 0, 1}}, 4, 4); 		
		shape.applyAffine(transfirmMatrix); 		
		restoreCubePosition(); 		
		canva.repaintCanva(); 	
	}//GEN-LAST:event_xRotLeftActionPerformed

	/**
	 * Врящение вокруг оси OX против чесовой стрелке
	 */		
	private void xRotRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xRotRightActionPerformed
		moveCubeToCenter(); 		
		Matrix transfirmMatrix = new Matrix(new double[][]{ 					
			{Math.cos(Math.PI / 20), 0, -Math.sin(Math.PI / 20), 0}, 					
			{0, 1, 0, 0},
			{Math.sin(Math.PI / 20), 0, Math.cos(Math.PI / 20), 0},
			{0, 0, 0, 1}}, 4, 4); 	
		transfirmMatrix = transfirmMatrix.inverse();
		shape.applyAffine(transfirmMatrix); 		
		restoreCubePosition(); 		
		canva.repaintCanva(); 
	}//GEN-LAST:event_xRotRightActionPerformed

	private void changePerspectiveViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePerspectiveViewButtonActionPerformed
		canva.setGraphicsObjectControl(new PerspectiveControl(shape));
	}//GEN-LAST:event_changePerspectiveViewButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allReflect;
    private javax.swing.JButton allScaleDown;
    private javax.swing.JButton allScaleUp;
    private javax.swing.JCheckBox antialiasingCheckBox;
    private javax.swing.JButton changePerspectiveViewButton;
    private javax.swing.JSpinner dSpinner;
    private javax.swing.JCheckBox invisCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JCheckBox perspectiveCheckBox;
    private javax.swing.JButton xMoveLeft;
    private javax.swing.JButton xMoveRight;
    private javax.swing.JButton xReflect;
    private javax.swing.JButton xRotLeft;
    private javax.swing.JButton xRotRight;
    private javax.swing.JButton xScaleDown;
    private javax.swing.JButton xScaleUp;
    private javax.swing.JButton yMoveLeft;
    private javax.swing.JButton yMoveRight;
    private javax.swing.JButton yReflect;
    private javax.swing.JButton yRotLeft;
    private javax.swing.JButton yRotRight;
    private javax.swing.JButton yScaleDown;
    private javax.swing.JButton yScaleUp;
    private javax.swing.JButton zMoveLeft;
    private javax.swing.JButton zMoveRight;
    private javax.swing.JButton zReflect;
    private javax.swing.JButton zRotLeft;
    private javax.swing.JButton zRotRight;
    private javax.swing.JButton zScaleDown;
    private javax.swing.JButton zScaleUp;
    private javax.swing.JSpinner zViewSpinner;
    // End of variables declaration//GEN-END:variables

	/**
	 * Перемещает куб в цент координат
	*/
	protected void moveCubeToCenter() {
		Coordinates coord = shape.getPoints();
		x = coord.getCenter(0);
		y = coord.getCenter(1);
		z = coord.getCenter(2);
		Matrix transfirmMatrix = new Matrix(new double[][] {
			 {1,0,0,0},
			 {0,1,0,0},
			 {0,0,1,0},
			 {-x,-y,-z,1}}, 4,4);
		shape.applyAffine(transfirmMatrix);
	}
	
	/**
	 * Востанавливает прежнее положение 
	*/	
	protected void restoreCubePosition() {
		Matrix transfirmMatrix = new Matrix(new double[][] {
			 {1,0,0,0},
			 {0,1,0,0},
			 {0,0,1,0},
			 {x,y,z,1}}, 4,4);
		shape.applyAffine(transfirmMatrix);
	}
	
	@Override
	public void updatePanel() {
		shape.setAntialiasing(antialiasingCheckBox.isSelected());
		shape.removeInves(invisCheckBox.isSelected());
		shape.perspective(perspectiveCheckBox.isSelected());
	}
}
